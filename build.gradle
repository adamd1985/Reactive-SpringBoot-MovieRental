plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "com.github.johnrengelman.processes" version "0.5.0"
    id "org.springdoc.openapi-gradle-plugin" version "1.3.0"
    id 'java'
}

group = 'org.adamd'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'


    implementation 'io.springfox:springfox-swagger2:2.10.0'
    implementation 'io.springfox:springfox-swagger-ui:2.10.0'
    implementation 'io.springfox:springfox-spring-webflux:2.10.0'

    implementation 'org.liquibase:liquibase-core'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'

    testImplementation 'io.projectreactor:reactor-test:3.3.0.RELEASE'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

openApi {
    apiDocsUrl.set("http://localhost:8080/v2/api-docs")
    outputDir.set(file("$buildDir/restapi-docs"))
    outputFileName.set("rental-restopenapi.json")
    waitTimeInSeconds.set(30)
    forkProperties.set("-Dspring.profiles.active=dev")
}